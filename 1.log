added /home/hanshis/workspace/LongContextInfer to sys.path
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:02<00:02,  2.05s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.26s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.38s/it]
Traceback (most recent call last):
  File "/home/hanshis/workspace/LongContextInfer/observation/needle_test.py", line 48, in <module>
    target_cache = EvictStreamLLMCache(target, start_size=512, recent_size=budget-512)
  File "/home/hanshis/workspace/LongContextInfer/models/cache_utils.py", line 581, in __init__
    self.key_cache.append(torch.zeros([1, self.num_heads, start_size+recent_size, self.head_dim], dtype=dtype).to(device))
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 640.00 MiB. GPU 0 has a total capacity of 44.32 GiB of which 622.44 MiB is free. Process 2475051 has 36.44 GiB memory in use. Including non-PyTorch memory, this process has 7.25 GiB memory in use. Of the allocated memory 6.84 GiB is allocated by PyTorch, and 1.76 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
